package com.jbk.dashboard;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class DashboardTesting {

	WebDriver driver;
	int i=1;
	
	@BeforeMethod
	public void setUp() {
		System.setProperty("webdriver.chrome.driver", "C:\\chromedriver.exe");
		driver = new ChromeDriver();
		driver.get("file:///F:/Offline%20website/pages/examples/dashboard.html");
		driver.manage().window().maximize();
		}

	@Test(priority = 1)
	public void checkCourses() {
		List<String> expCourses = new ArrayList<>();
		expCourses.add("Selenium");
		expCourses.add("Java / J2EE");
		expCourses.add("Python");
		expCourses.add("Php");
		System.out.println("Expected>>>>>" + expCourses);

		List<WebElement> actual = driver.findElements(By.xpath("//h3"));
		List<String> actCourses = new ArrayList<>();
		for (WebElement we : actual) {
			actCourses.add(we.getText());
		}
		System.out.println(
				"---------------------------------------------------------------------------------------------------------------");
		System.out.println("Actual>>>>>" + actCourses);
		/*
		 * if(actCourses.equals(expCourses)) { return true; }else { return false; }
		 */
		Assert.assertEquals(actCourses, expCourses);
	}

	@Test(priority = 2)
	public void checkSubCourses() {
		List<String> expCourses = new ArrayList<>();
		expCourses.add("Automation Testing");
		expCourses.add("Software Development");
		expCourses.add("Data Science");
		expCourses.add("Web Development");
		System.out.println("Expected>>>>>" + expCourses);

		List<WebElement> actual = driver.findElements(By.xpath("//div[@class='row']//p"));
		List<String> actCourses = new ArrayList<>();
		for (WebElement we : actual) {
			actCourses.add(we.getText());
		}
		System.out.println(
				"---------------------------------------------------------------------------------------------------------------");
		System.out.println("Actual>>>>>" + actCourses);
		Assert.assertEquals(actCourses, expCourses);
	}

	@Test(priority = 3)
	public void buttonIsClickable() {

		WebElement button = driver.findElement(By.xpath("//a[text()='LOGOUT']"));
		boolean actcheck = button.isDisplayed();
		System.out.println(">>>" + actcheck);
	}

	@Test(priority = 4)
	public void verifyMoreInfoWithWindowsHandles() {

		List<WebElement> moreInfo = driver.findElements(By.xpath("//a[text()='More info ']"));

		for (WebElement we : moreInfo) {
			System.out.println("Print Button>>>>" + we.getText());
			we.click();
		}

		String mainWindow = driver.getWindowHandle();
		Set<String> set = driver.getWindowHandles();
		Iterator<String> iterator = set.iterator();
		while (iterator.hasNext()) {
			String childWindow = iterator.next();
			if (!mainWindow.equals(childWindow)) {
				System.out.println("print title of child window" + driver.switchTo().window(childWindow).getTitle());
				driver.close();
			}
			driver.switchTo().window(mainWindow);
		}
	}
	
	@Test(priority = 5)
	public void logoutButtonWorking() {
		WebElement button = driver.findElement(By.xpath("//a[text()='LOGOUT']"));
		button.click();
		String actTitle=driver.getTitle();
		String ExpTitle="JavaByKiran | Log in";
		Assert.assertEquals(actTitle, ExpTitle);
	}
	
	@Test(priority = 6)
	public void checkDashboardUrl() {
		String actUrl=driver.getCurrentUrl();
		String expUrl="file:///F:/Offline%20website/pages/examples/dashboard.html";
		Assert.assertEquals(actUrl,expUrl);
	}
	
	/*
	 * @Test(priority = 7) public boolean checkSubCoursesUnderForSelenium() { int
	 * i=1; while(i<=4) { WebElement actCourse=driver.findElement(By.xpath(
	 * "//div[@class='inner']//following::p[i]")); String
	 * actual=actCourse.getText(); System.out.println(">>>>>"+actual); } i++; return
	 * false; }
	 */
}
